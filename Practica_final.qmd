---
title: "practica_final"
format: html
editor: visual
---

Vamos a utilizar el dataset de semillas que se encuentra aquí: https://archive.ics.uci.edu/ml/datasets/seeds#

Primero vamos a descargarnos el dataset con el siguiente comando:

```{r}
library(tidyverse)
df_seeds <- read.table('https://archive.ics.uci.edu/ml/machine-learning-databases/00236/seeds_dataset.txt', col.names =c('area','perimetro','compacto','longitud','anchura','coeficient.asimetria','longitud.ranura','tipo'))
head (df_seeds)
```

#### PREGUNTA 1 (0.5pt)

¿Cuantas filas y cuantas columnas tiene el dataframe df_seeds?

**Respuesta**:

```{r}
nrow(df_seeds) #Para encontrar el nro de filas (210)
ncol(df_seeds) #Para encontrar el nro de columnas(8)
```

#### PREGUNTA 2 (0.5pt)

Vamos a convertir en factor la columna tipo. Vamos a reemplazar los números por su correspondiente etiqueta (label). La correspondencia entre el código y el tipo es:

-   1 - Kama
-   2 - Rosa
-   3 - Canadian

Convierte en factor la columna tipo, respetando las etiquetas:

**Respuesta**:

```{r}

df_seeds$tipo <- factor(df_seeds$tipo, levels = 1:3, labels = c("Kama", "Rosa", "Canadian"))

head(df_seeds)

```

#### PREGUNTA 3 (1pt)

¿Cual es la media del area de cada uno de los tipos?

**Respuesta**

```{r}
media_area_x_tipo <- df_seeds %>%
  group_by(tipo) %>%
  summarize(media_area = mean(area))


print(media_area_x_tipo)
```

#### PREGUNTA 4 (0.5pt)

¿Como se llama el siguiente tipo de gráfico?. ¿Qué representa la línea del centro de la caja?

```{r}
ggplot(df_seeds, aes(x=tipo, y=area)) + geom_boxplot()
```

**Respuesta**: 'El tipo de gráfico se llama Boxplot o en español gráfico de caja y bigotes. La linea del centro de la caja representa la mediana de los datos'

#### PREGUNTA 5 (1.5pt)

¿Como pintarías un diagrama de puntos (o scatterplot) con ggplot con las siguientes características? - En el eje X la variable compacto - En el eje Y la variable area - Cada tipo de semilla debería tener un color diferente

**Respuesta**:

```{r}
  
ggplot(df_seeds, aes(x = compacto, y = area, color = tipo)) +
  geom_point() 
  
   
```

#### PREGUNTA 6 (0.5pt)

¿Qué hace la siguiente línea?:

```{r}
df_seeds |> mutate(is_kama = tipo=='Kama') -> df_seeds
```

**Respuesta**: 'La línea crea una nueva columna llamada "is_kama" que contiene TRUE si el tipo es 'Kama' y FALSE si no lo es'

#### PREGUNTA 7 (1.5pt)

Vamos a dividir el conjunto de datos en test y training porque vamos a entrenar un modelo que me permita diferenciar si una semilla es de tipo Kama o no. ¿Por qué es aconsejable dividir el dataset en los grupos de train y test?

```{r}
set.seed(123) # Este set.seed hace que a todos nos generen los mismos número aleatorios
idx <- sample(1:nrow(df_seeds), 0.7*nrow(df_seeds))
df_seeds_train <- df_seeds[idx,]
df_seeds_test <- df_seeds[-idx,]
```

**Respuesta**: 'Es aconsejable porque asi se puede ver el resultado en datos que no se usaron en el entrenamiento, ademas con esto podemos evitar el sobreajuste'

#### PREGUNTA 8 (1pt)

Vamos a crear un modelo para realizar una clasificación binaria, donde le pasaremos como entrada las columnas: area, perimetro, compacto, longitud, coeficient.asimetria y longitud.ranura

¿Qué tipo de algoritmo o modelo debería usar?

**Respuesta**: 'Hay varios algoritmos de aprendizaje que se podrian usar, entre ellos Regresión Logística, Máquinas de Vectores de Soporte (SVM) o Árboles de Decisión'

#### PREGUNTA 9 (1pt)

Crea un modelo que me permita clasificar si una semilla es de tipo Kama o no con las siguientes columnas: area, perimetro, compacto, longitud, coeficient.asimetria, longitud.ranura

**Respuesta**:

```{r}

modelo <- glm(factor(tipo == "Kama") ~ ., data = df_seeds[, c("area", "perimetro", "compacto", "longitud", "coeficient.asimetria", "longitud.ranura", "tipo")], family = binomial)

```

#### PREGUNTA 10 (1pt)

Si usamos un umbral de 0 en la salida del modelo (lo que equivale a probabilidad de 0.5 cuando usamos el predict con type='response') ¿Cuales son los valores de precisión y exhausitividad?

**Respuesta**.

```{r}
predicciones <- predict(modelo, newdata = df_seeds_test, type = "response")
predicciones_clasificadas <- ifelse(predicciones > 0.5, "Kama", "No Kama")
precision <- sum(predicciones_clasificadas == df_seeds_test$tipo) / length(predicciones_clasificadas)
exhaustividad <- sum(predicciones_clasificadas == "Kama" & df_seeds_test$tipo == "Kama") / sum(df_seeds_test$tipo == "Kama")
precision
exhaustividad
```

#### PREGUNTA 11 (1.5pt)

¿Qué están haciendo las siguientes líneas?

```{r}
set.seed(123)
cl<-df_seeds |> select(area,perimetro,compacto,longitud,anchura,coeficient.asimetria,longitud.ranura) |> kmeans(3)
table(real=df_seeds$tipo,cluster=cl$cluster)
```

**Respuesta**: 'Están realizando un análisis de clustering mediante el algoritmo K-means y luego creando una tabla de contingencia para comparar los grupos obtenidos con los tipos reales de semillas.'
